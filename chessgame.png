<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="584px" preserveAspectRatio="none" style="width:2547px;height:584px;" version="1.1" viewBox="0 0 2547 584" width="2547px" zoomAndPan="magnify"><defs><filter height="300%" id="f1lpkrlkhzndre" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[aff6c08b76d46be7099ea456e5653503]
class point--><rect fill="#FEFECE" filter="url(#f1lpkrlkhzndre)" height="124.8281" id="point" style="stroke: #A80036; stroke-width: 1.5;" width="98" x="533.5" y="72"/><ellipse cx="563.8" cy="88" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M566.7688,93.6406 Q566.1906,93.9375 565.55,94.0859 Q564.9094,94.2344 564.2063,94.2344 Q561.7063,94.2344 560.3859,92.5859 Q559.0656,90.9375 559.0656,87.8125 Q559.0656,84.6875 560.3859,83.0313 Q561.7063,81.375 564.2063,81.375 Q564.9094,81.375 565.5578,81.5313 Q566.2063,81.6875 566.7688,81.9844 L566.7688,84.7031 Q566.1438,84.125 565.55,83.8516 Q564.9563,83.5781 564.3313,83.5781 Q562.9875,83.5781 562.3,84.6484 Q561.6125,85.7188 561.6125,87.8125 Q561.6125,89.9063 562.3,90.9766 Q562.9875,92.0469 564.3313,92.0469 Q564.9563,92.0469 565.55,91.7734 Q566.1438,91.5 566.7688,90.9219 L566.7688,93.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="32" x="581.2" y="92.1543">point</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="534.5" x2="630.5" y1="104" y2="104"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="541.5" y="112"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="40" x="553.5" y="118.2104">int m_x</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="541.5" y="124.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="40" x="553.5" y="131.0151">int m_y</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="534.5" x2="630.5" y1="137.6094" y2="137.6094"/><ellipse cx="544.5" cy="148.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="553.5" y="151.8198">point(int,int)</text><ellipse cx="544.5" cy="161.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="553.5" y="164.6245">~point()</text><ellipse cx="544.5" cy="174.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="553.5" y="177.4292">int getx(void)</text><ellipse cx="544.5" cy="187.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="553.5" y="190.2339">int gety(void)</text><!--MD5=[2136a21d1440f72d768afa2a71bff94e]
class piece--><rect fill="#FEFECE" filter="url(#f1lpkrlkhzndre)" height="124.8281" id="piece" style="stroke: #A80036; stroke-width: 1.5;" width="198" x="483.5" y="385"/><ellipse cx="561.25" cy="401" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M564.2188,406.6406 Q563.6406,406.9375 563,407.0859 Q562.3594,407.2344 561.6563,407.2344 Q559.1563,407.2344 557.8359,405.5859 Q556.5156,403.9375 556.5156,400.8125 Q556.5156,397.6875 557.8359,396.0313 Q559.1563,394.375 561.6563,394.375 Q562.3594,394.375 563.0078,394.5313 Q563.6563,394.6875 564.2188,394.9844 L564.2188,397.7031 Q563.5938,397.125 563,396.8516 Q562.4063,396.5781 561.7813,396.5781 Q560.4375,396.5781 559.75,397.6484 Q559.0625,398.7188 559.0625,400.8125 Q559.0625,402.9063 559.75,403.9766 Q560.4375,405.0469 561.7813,405.0469 Q562.4063,405.0469 563,404.7734 Q563.5938,404.5 564.2188,403.9219 L564.2188,406.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="34" x="581.75" y="405.1543">piece</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="484.5" x2="680.5" y1="417" y2="417"/><ellipse cx="494.5" cy="428" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="503.5" y="431.2104">enum color{black=1,white=2}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="491.5" y="437.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="23" x="503.5" y="444.0151">m_c</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="484.5" x2="680.5" y1="450.6094" y2="450.6094"/><ellipse cx="494.5" cy="461.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="102" x="503.5" y="464.8198">piece(int,int,color)</text><ellipse cx="494.5" cy="474.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="503.5" y="477.6245">piece(point*,color)</text><ellipse cx="494.5" cy="487.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="503.5" y="490.4292">~piece()</text><ellipse cx="494.5" cy="500.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="503.5" y="503.2339">color getc(void)</text><!--MD5=[309e10598840a1648f42839a34852352]
class chessboard--><rect fill="#FEFECE" filter="url(#f1lpkrlkhzndre)" height="252.875" id="chessboard" style="stroke: #A80036; stroke-width: 1.5;" width="254" x="30.5" y="8"/><ellipse cx="116.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M119.2188,29.6406 Q118.6406,29.9375 118,30.0859 Q117.3594,30.2344 116.6563,30.2344 Q114.1563,30.2344 112.8359,28.5859 Q111.5156,26.9375 111.5156,23.8125 Q111.5156,20.6875 112.8359,19.0313 Q114.1563,17.375 116.6563,17.375 Q117.3594,17.375 118.0078,17.5313 Q118.6563,17.6875 119.2188,17.9844 L119.2188,20.7031 Q118.5938,20.125 118,19.8516 Q117.4063,19.5781 116.7813,19.5781 Q115.4375,19.5781 114.75,20.6484 Q114.0625,21.7188 114.0625,23.8125 Q114.0625,25.9063 114.75,26.9766 Q115.4375,28.0469 116.7813,28.0469 Q117.4063,28.0469 118,27.7734 Q118.5938,27.5 119.2188,26.9219 L119.2188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="136.75" y="28.1543">chessboard</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31.5" x2="283.5" y1="40" y2="40"/><ellipse cx="41.5" cy="51" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="50.5" y="54.2104">enum size{LEN=15,MAXNUM=225}</text><ellipse cx="41.5" cy="63.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="50.5" y="67.0151">enum state{empty=0,black=1,white=2}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="38.5" y="73.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="50.5" y="79.8198">int num</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="38.5" y="86.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="50.5" y="92.6245">state array[LEN][LEN]</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="31.5" x2="283.5" y1="99.2188" y2="99.2188"/><ellipse cx="41.5" cy="110.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="50.5" y="113.4292">chessboard()</text><ellipse cx="41.5" cy="123.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="84" x="50.5" y="126.2339">~chessboard()</text><ellipse cx="41.5" cy="135.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="50.5" y="139.0386">bool istaken(int,int)</text><ellipse cx="41.5" cy="148.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="50.5" y="151.8433">bool isempty()</text><ellipse cx="41.5" cy="161.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="50.5" y="164.6479">bool isfull()</text><ellipse cx="41.5" cy="174.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="50.5" y="177.4526">bool isbound(int,int)</text><ellipse cx="41.5" cy="187.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="50" x="50.5" y="190.2573">int getn()</text><ellipse cx="41.5" cy="199.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="97" x="50.5" y="203.062">state gets(int,int)</text><ellipse cx="41.5" cy="212.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="50.5" y="215.8667">bool sets(int,int,state)</text><ellipse cx="41.5" cy="225.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="98" x="50.5" y="228.6714">void show(point*)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="38.5" y="235.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="50.5" y="241.4761">void line_draw(int,int)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="38.5" y="248.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="50.5" y="254.2808">void chess_draw(int,int,state,point*)</text><!--MD5=[3c1ddca20ac14429167c15f4778b2efc]
class chessstack--><rect fill="#FEFECE" filter="url(#f1lpkrlkhzndre)" height="176.0469" id="chessstack" style="stroke: #A80036; stroke-width: 1.5;" width="177" x="320" y="46.5"/><ellipse cx="368.75" cy="62.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M371.7188,68.1406 Q371.1406,68.4375 370.5,68.5859 Q369.8594,68.7344 369.1563,68.7344 Q366.6563,68.7344 365.3359,67.0859 Q364.0156,65.4375 364.0156,62.3125 Q364.0156,59.1875 365.3359,57.5313 Q366.6563,55.875 369.1563,55.875 Q369.8594,55.875 370.5078,56.0313 Q371.1563,56.1875 371.7188,56.4844 L371.7188,59.2031 Q371.0938,58.625 370.5,58.3516 Q369.9063,58.0781 369.2813,58.0781 Q367.9375,58.0781 367.25,59.1484 Q366.5625,60.2188 366.5625,62.3125 Q366.5625,64.4063 367.25,65.4766 Q367.9375,66.5469 369.2813,66.5469 Q369.9063,66.5469 370.5,66.2734 Q371.0938,66 371.7188,65.4219 L371.7188,68.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="71" x="389.25" y="66.6543">chessstack</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="321" x2="496" y1="78.5" y2="78.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="328" y="86.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="340" y="92.7104">int num</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="328" y="99.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="340" y="105.5151">std::stack&lt;piece*&gt; s;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="321" x2="496" y1="112.1094" y2="112.1094"/><ellipse cx="331" cy="123.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="340" y="126.3198">chessstack()</text><ellipse cx="331" cy="135.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="81" x="340" y="139.1245">~chessstack()</text><ellipse cx="331" cy="148.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="340" y="151.9292">piece* get_last_piece(void)</text><ellipse cx="331" cy="161.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="79" x="340" y="164.7339">bool pop(void)</text><ellipse cx="331" cy="174.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="340" y="177.5386">bool push(piece*)</text><ellipse cx="331" cy="187.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="340" y="190.3433">bool isempty()</text><ellipse cx="331" cy="199.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="340" y="203.1479">int getn(void)</text><ellipse cx="331" cy="212.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="69" x="340" y="215.9526">void replay()</text><!--MD5=[d1ea29ba50924684fedfb790f5c40d35]
class response--><rect fill="#FEFECE" filter="url(#f1lpkrlkhzndre)" height="73.6094" id="response" style="stroke: #A80036; stroke-width: 1.5;" width="285" x="1115" y="97.5"/><ellipse cx="1226.75" cy="113.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1226.8594,108.8438 L1225.7031,113.9219 L1228.0313,113.9219 L1226.8594,108.8438 Z M1225.375,106.6094 L1228.3594,106.6094 L1231.7188,119 L1229.2656,119 L1228.5,115.9375 L1225.2188,115.9375 L1224.4688,119 L1222.0313,119 L1225.375,106.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="53" x="1247.25" y="117.6543">response</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1116" x2="1399" y1="129.5" y2="129.5"/><ellipse cx="1126" cy="140.5" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="1135" y="143.7104">enum type{put,withdraw,giveup,prohibit}</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1116" x2="1399" y1="150.3047" y2="150.3047"/><ellipse cx="1126" cy="161.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="1135" y="164.5151">virtual response::type get_response_type()=0</text><!--MD5=[eb9e5e7f57787fe470cb09a064a62052]
class put--><rect fill="#FEFECE" filter="url(#f1lpkrlkhzndre)" height="60.8047" id="put" style="stroke: #A80036; stroke-width: 1.5;" width="269" x="717" y="417"/><ellipse cx="836.75" cy="433" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M839.7188,438.6406 Q839.1406,438.9375 838.5,439.0859 Q837.8594,439.2344 837.1563,439.2344 Q834.6563,439.2344 833.3359,437.5859 Q832.0156,435.9375 832.0156,432.8125 Q832.0156,429.6875 833.3359,428.0313 Q834.6563,426.375 837.1563,426.375 Q837.8594,426.375 838.5078,426.5313 Q839.1563,426.6875 839.7188,426.9844 L839.7188,429.7031 Q839.0938,429.125 838.5,428.8516 Q837.9063,428.5781 837.2813,428.5781 Q835.9375,428.5781 835.25,429.6484 Q834.5625,430.7188 834.5625,432.8125 Q834.5625,434.9063 835.25,435.9766 Q835.9375,437.0469 837.2813,437.0469 Q837.9063,437.0469 838.5,436.7734 Q839.0938,436.5 839.7188,435.9219 L839.7188,438.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="21" x="857.25" y="437.1543">put</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="718" x2="985" y1="449" y2="449"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="718" x2="985" y1="457" y2="457"/><ellipse cx="728" cy="468" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="737" y="471.2104">virtual response::type get_response_type()</text><!--MD5=[2aa7466de08221c70ac935dea7239e89]
class withdraw--><rect fill="#FEFECE" filter="url(#f1lpkrlkhzndre)" height="60.8047" id="withdraw" style="stroke: #A80036; stroke-width: 1.5;" width="269" x="1021" y="417"/><ellipse cx="1123.75" cy="433" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1126.7188,438.6406 Q1126.1406,438.9375 1125.5,439.0859 Q1124.8594,439.2344 1124.1563,439.2344 Q1121.6563,439.2344 1120.3359,437.5859 Q1119.0156,435.9375 1119.0156,432.8125 Q1119.0156,429.6875 1120.3359,428.0313 Q1121.6563,426.375 1124.1563,426.375 Q1124.8594,426.375 1125.5078,426.5313 Q1126.1563,426.6875 1126.7188,426.9844 L1126.7188,429.7031 Q1126.0938,429.125 1125.5,428.8516 Q1124.9063,428.5781 1124.2813,428.5781 Q1122.9375,428.5781 1122.25,429.6484 Q1121.5625,430.7188 1121.5625,432.8125 Q1121.5625,434.9063 1122.25,435.9766 Q1122.9375,437.0469 1124.2813,437.0469 Q1124.9063,437.0469 1125.5,436.7734 Q1126.0938,436.5 1126.7188,435.9219 L1126.7188,438.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="55" x="1144.25" y="437.1543">withdraw</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1022" x2="1289" y1="449" y2="449"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1022" x2="1289" y1="457" y2="457"/><ellipse cx="1032" cy="468" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="1041" y="471.2104">virtual response::type get_response_type()</text><!--MD5=[95d34d7da10000a79316c460315fdcfc]
class giveup--><rect fill="#FEFECE" filter="url(#f1lpkrlkhzndre)" height="60.8047" id="giveup" style="stroke: #A80036; stroke-width: 1.5;" width="269" x="1325" y="417"/><ellipse cx="1434.75" cy="433" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1437.7188,438.6406 Q1437.1406,438.9375 1436.5,439.0859 Q1435.8594,439.2344 1435.1563,439.2344 Q1432.6563,439.2344 1431.3359,437.5859 Q1430.0156,435.9375 1430.0156,432.8125 Q1430.0156,429.6875 1431.3359,428.0313 Q1432.6563,426.375 1435.1563,426.375 Q1435.8594,426.375 1436.5078,426.5313 Q1437.1563,426.6875 1437.7188,426.9844 L1437.7188,429.7031 Q1437.0938,429.125 1436.5,428.8516 Q1435.9063,428.5781 1435.2813,428.5781 Q1433.9375,428.5781 1433.25,429.6484 Q1432.5625,430.7188 1432.5625,432.8125 Q1432.5625,434.9063 1433.25,435.9766 Q1433.9375,437.0469 1435.2813,437.0469 Q1435.9063,437.0469 1436.5,436.7734 Q1437.0938,436.5 1437.7188,435.9219 L1437.7188,438.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="1455.25" y="437.1543">giveup</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1326" x2="1593" y1="449" y2="449"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1326" x2="1593" y1="457" y2="457"/><ellipse cx="1336" cy="468" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="1345" y="471.2104">virtual response::type get_response_type()</text><!--MD5=[a25a312fc18ca0465a12c803f3a4e1db]
class prohibit--><rect fill="#FEFECE" filter="url(#f1lpkrlkhzndre)" height="60.8047" id="prohibit" style="stroke: #A80036; stroke-width: 1.5;" width="269" x="1629" y="417"/><ellipse cx="1735.25" cy="433" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1738.2188,438.6406 Q1737.6406,438.9375 1737,439.0859 Q1736.3594,439.2344 1735.6563,439.2344 Q1733.1563,439.2344 1731.8359,437.5859 Q1730.5156,435.9375 1730.5156,432.8125 Q1730.5156,429.6875 1731.8359,428.0313 Q1733.1563,426.375 1735.6563,426.375 Q1736.3594,426.375 1737.0078,426.5313 Q1737.6563,426.6875 1738.2188,426.9844 L1738.2188,429.7031 Q1737.5938,429.125 1737,428.8516 Q1736.4063,428.5781 1735.7813,428.5781 Q1734.4375,428.5781 1733.75,429.6484 Q1733.0625,430.7188 1733.0625,432.8125 Q1733.0625,434.9063 1733.75,435.9766 Q1734.4375,437.0469 1735.7813,437.0469 Q1736.4063,437.0469 1737,436.7734 Q1737.5938,436.5 1738.2188,435.9219 L1738.2188,438.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="48" x="1755.75" y="437.1543">prohibit</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1630" x2="1897" y1="449" y2="449"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1630" x2="1897" y1="457" y2="457"/><ellipse cx="1640" cy="468" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="1649" y="471.2104">virtual response::type get_response_type()</text><!--MD5=[760a978e3a38a1b1df8c287d7e808941]
class handle--><rect fill="#FEFECE" filter="url(#f1lpkrlkhzndre)" height="188.8516" id="handle" style="stroke: #A80036; stroke-width: 1.5;" width="303" x="6" y="353"/><ellipse cx="131.75" cy="369" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M134.7188,374.6406 Q134.1406,374.9375 133.5,375.0859 Q132.8594,375.2344 132.1563,375.2344 Q129.6563,375.2344 128.3359,373.5859 Q127.0156,371.9375 127.0156,368.8125 Q127.0156,365.6875 128.3359,364.0313 Q129.6563,362.375 132.1563,362.375 Q132.8594,362.375 133.5078,362.5313 Q134.1563,362.6875 134.7188,362.9844 L134.7188,365.7031 Q134.0938,365.125 133.5,364.8516 Q132.9063,364.5781 132.2813,364.5781 Q130.9375,364.5781 130.25,365.6484 Q129.5625,366.7188 129.5625,368.8125 Q129.5625,370.9063 130.25,371.9766 Q130.9375,373.0469 132.2813,373.0469 Q132.9063,373.0469 133.5,372.7734 Q134.0938,372.5 134.7188,371.9219 L134.7188,374.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="152.25" y="373.1543">handle</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="308" y1="385" y2="385"/><ellipse cx="17" cy="396" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="26" y="399.2104">enum type{none,l3,l4,l5,ll}</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="405.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="26" y="412.0151">const int vec[4][2]</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="308" y1="418.6094" y2="418.6094"/><ellipse cx="17" cy="429.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="26" y="432.8198">handle()</text><ellipse cx="17" cy="442.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="26" y="445.6245">~handle()</text><ellipse cx="17" cy="455.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="26" y="458.4292">handle::type get_type(chessboard*,point*,int,int)</text><ellipse cx="17" cy="468.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="26" y="471.2339">bool check_prohibit(chessboard*,point*)</text><ellipse cx="17" cy="480.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="176" x="26" y="484.0386">bool isfive(chessboard*,point*)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="490.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="273" x="26" y="496.8433">int single_find_same(chessboard*,piece*,int,int)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="503.4375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="26" y="509.6479">int double_find_same(chessboard*,piece*,int,int)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="516.2422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="26" y="522.4526">int distance_xboarder(int)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="14" y="529.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="26" y="535.2573">int distance_yboarder(int)</text><!--MD5=[308de564e57c8d51c168255b0b03c096]
class player--><rect fill="#FEFECE" filter="url(#f1lpkrlkhzndre)" height="86.4141" id="player" style="stroke: #A80036; stroke-width: 1.5;" width="350" x="1933.5" y="404.5"/><ellipse cx="2085.75" cy="420.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2085.8594,415.8438 L2084.7031,420.9219 L2087.0313,420.9219 L2085.8594,415.8438 Z M2084.375,413.6094 L2087.3594,413.6094 L2090.7188,426 L2088.2656,426 L2087.5,422.9375 L2084.2188,422.9375 L2083.4688,426 L2081.0313,426 L2084.375,413.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="37" x="2106.25" y="424.6543">player</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1934.5" x2="2282.5" y1="436.5" y2="436.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1934.5" x2="2282.5" y1="444.5" y2="444.5"/><ellipse cx="1944.5" cy="455.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="324" x="1953.5" y="458.7104">virtual response* send_response(chessboard*,point*)=0</text><ellipse cx="1944.5" cy="468.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="1953.5" y="471.5151">virtual point* send_point(chessboard*,point*)=0</text><ellipse cx="1944.5" cy="481.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="286" x="1953.5" y="484.3198">virtual bool allow_withdraw(chessboard*,point*)=0</text><!--MD5=[3d5640821bcb0f1f0ba783c6a289e9db]
class myplayer--><rect fill="#FEFECE" filter="url(#f1lpkrlkhzndre)" height="176.0469" id="myplayer" style="stroke: #A80036; stroke-width: 1.5;" width="368" x="1538.5" y="46.5"/><ellipse cx="1690.75" cy="62.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1693.7188,68.1406 Q1693.1406,68.4375 1692.5,68.5859 Q1691.8594,68.7344 1691.1563,68.7344 Q1688.6563,68.7344 1687.3359,67.0859 Q1686.0156,65.4375 1686.0156,62.3125 Q1686.0156,59.1875 1687.3359,57.5313 Q1688.6563,55.875 1691.1563,55.875 Q1691.8594,55.875 1692.5078,56.0313 Q1693.1563,56.1875 1693.7188,56.4844 L1693.7188,59.2031 Q1693.0938,58.625 1692.5,58.3516 Q1691.9063,58.0781 1691.2813,58.0781 Q1689.9375,58.0781 1689.25,59.1484 Q1688.5625,60.2188 1688.5625,62.3125 Q1688.5625,64.4063 1689.25,65.4766 Q1689.9375,66.5469 1691.2813,66.5469 Q1691.9063,66.5469 1692.5,66.2734 Q1693.0938,66 1693.7188,65.4219 L1693.7188,68.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="55" x="1711.25" y="66.6543">myplayer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1539.5" x2="1905.5" y1="78.5" y2="78.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1546.5" y="86.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1558.5" y="92.7104">const long scoretable[11]</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1546.5" y="99.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="1558.5" y="105.5151">const int vec[4][2]</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1546.5" y="112.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="1558.5" y="118.3198">handle hd</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1539.5" x2="1905.5" y1="124.9141" y2="124.9141"/><ellipse cx="1549.5" cy="135.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="60" x="1558.5" y="139.1245">myplayer()</text><ellipse cx="1549.5" cy="148.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="1558.5" y="151.9292">virtual response* send_response(chessboard*,point*)</text><ellipse cx="1549.5" cy="161.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="1558.5" y="164.7339">virtual point* send_point(chessboard*,point*)</text><ellipse cx="1549.5" cy="174.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="1558.5" y="177.5386">virtual bool allow_withdraw(chessboard*,point*)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1546.5" y="184.1328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1558.5" y="190.3433">long get_score(int,int)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1546.5" y="196.9375"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="342" x="1558.5" y="203.1479">long mark_vec(chessboard*,int,int,chessboard::state,int,int)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1546.5" y="209.7422"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="1558.5" y="215.9526">long mark(chessboard*,int,int,chessboard::state)</text><!--MD5=[fe899c89db3a226e794bd0b8304a2461]
class yourplayer--><rect fill="#FEFECE" filter="url(#f1lpkrlkhzndre)" height="86.4141" id="yourplayer" style="stroke: #A80036; stroke-width: 1.5;" width="334" x="1941.5" y="91.5"/><ellipse cx="2071.75" cy="107.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2074.7188,113.1406 Q2074.1406,113.4375 2073.5,113.5859 Q2072.8594,113.7344 2072.1563,113.7344 Q2069.6563,113.7344 2068.3359,112.0859 Q2067.0156,110.4375 2067.0156,107.3125 Q2067.0156,104.1875 2068.3359,102.5313 Q2069.6563,100.875 2072.1563,100.875 Q2072.8594,100.875 2073.5078,101.0313 Q2074.1563,101.1875 2074.7188,101.4844 L2074.7188,104.2031 Q2074.0938,103.625 2073.5,103.3516 Q2072.9063,103.0781 2072.2813,103.0781 Q2070.9375,103.0781 2070.25,104.1484 Q2069.5625,105.2188 2069.5625,107.3125 Q2069.5625,109.4063 2070.25,110.4766 Q2070.9375,111.5469 2072.2813,111.5469 Q2072.9063,111.5469 2073.5,111.2734 Q2074.0938,111 2074.7188,110.4219 L2074.7188,113.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="2092.25" y="111.6543">yourplayer</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1942.5" x2="2274.5" y1="123.5" y2="123.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1942.5" x2="2274.5" y1="131.5" y2="131.5"/><ellipse cx="1952.5" cy="142.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="1961.5" y="145.7104">virtual response* send_response(chessboard*,point*)</text><ellipse cx="1952.5" cy="155.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="1961.5" y="158.5151">virtual point* send_point(chessboard*,point*)</text><ellipse cx="1952.5" cy="168.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="1961.5" y="171.3198">virtual bool allow_withdraw(chessboard*,point*)</text><!--MD5=[bdb72a0de70eb2febd82359efcd7543e]
class judge--><rect fill="#FEFECE" filter="url(#f1lpkrlkhzndre)" height="86.4141" id="judge" style="stroke: #A80036; stroke-width: 1.5;" width="226" x="2310.5" y="91.5"/><ellipse cx="2402.25" cy="107.5" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2402.3594,102.8438 L2401.2031,107.9219 L2403.5313,107.9219 L2402.3594,102.8438 Z M2400.875,100.6094 L2403.8594,100.6094 L2407.2188,113 L2404.7656,113 L2404,109.9375 L2400.7188,109.9375 L2399.9688,113 L2397.5313,113 L2400.875,100.6094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="34" x="2422.75" y="111.6543">judge</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2311.5" x2="2535.5" y1="123.5" y2="123.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="2311.5" x2="2535.5" y1="131.5" y2="131.5"/><ellipse cx="2321.5" cy="142.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="2330.5" y="145.7104">virtual bool iswin(void)=0</text><ellipse cx="2321.5" cy="155.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="2330.5" y="158.5151">virtual void inter(player*,player*)=0</text><ellipse cx="2321.5" cy="168.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="2330.5" y="171.3198">virtual void end(void)=0</text><!--MD5=[94ad9d020ce6e7ba2627db675b88b515]
class myjudge--><rect fill="#FEFECE" filter="url(#f1lpkrlkhzndre)" height="252.875" id="myjudge" style="stroke: #A80036; stroke-width: 1.5;" width="210" x="2318.5" y="321"/><ellipse cx="2393.25" cy="337" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2396.2188,342.6406 Q2395.6406,342.9375 2395,343.0859 Q2394.3594,343.2344 2393.6563,343.2344 Q2391.1563,343.2344 2389.8359,341.5859 Q2388.5156,339.9375 2388.5156,336.8125 Q2388.5156,333.6875 2389.8359,332.0313 Q2391.1563,330.375 2393.6563,330.375 Q2394.3594,330.375 2395.0078,330.5313 Q2395.6563,330.6875 2396.2188,330.9844 L2396.2188,333.7031 Q2395.5938,333.125 2395,332.8516 Q2394.4063,332.5781 2393.7813,332.5781 Q2392.4375,332.5781 2391.75,333.6484 Q2391.0625,334.7188 2391.0625,336.8125 Q2391.0625,338.9063 2391.75,339.9766 Q2392.4375,341.0469 2393.7813,341.0469 Q2394.4063,341.0469 2395,340.7734 Q2395.5938,340.5 2396.2188,339.9219 L2396.2188,342.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="52" x="2413.75" y="341.1543">myjudge</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2319.5" x2="2527.5" y1="353" y2="353"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2326.5" y="361"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="46" x="2338.5" y="367.2104">bool win</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2326.5" y="373.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="57" x="2338.5" y="380.0151">bool white</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2326.5" y="386.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="2338.5" y="392.8198">chessboard jcb</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2326.5" y="399.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="83" x="2338.5" y="405.6245">chessstack jcs</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2326.5" y="412.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="2338.5" y="418.4292">handle hd</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2319.5" x2="2527.5" y1="425.0234" y2="425.0234"/><ellipse cx="2329.5" cy="436.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="56" x="2338.5" y="439.2339">myjudge()</text><ellipse cx="2329.5" cy="448.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="2338.5" y="452.0386">~myjudge()</text><ellipse cx="2329.5" cy="461.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="2338.5" y="464.8433">virtual bool iswin(void)</text><ellipse cx="2329.5" cy="474.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="2338.5" y="477.6479">virtual void inter(player*,player*)</text><ellipse cx="2329.5" cy="487.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="2338.5" y="490.4526">virtual void end(void)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2326.5" y="497.0469"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2338.5" y="503.2573">bool isequal(bool,piece::color)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2326.5" y="509.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="2338.5" y="516.062">bool judge_win(void)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2326.5" y="522.6563"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="2338.5" y="528.8667">bool deal_put(player*)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2326.5" y="535.4609"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="157" x="2338.5" y="541.6714">bool deal_withdraw(player*)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2326.5" y="548.2656"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="2338.5" y="554.4761">bool record_chess(void)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="2326.5" y="561.0703"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="2338.5" y="567.2808">bool show_record(void)</text><!--MD5=[a7bcc4d7ba9fa0d5020c763a17459c1f]
class chessgame--><rect fill="#FEFECE" filter="url(#f1lpkrlkhzndre)" height="60.8047" id="chessgame" style="stroke: #A80036; stroke-width: 1.5;" width="104" x="344.5" y="417"/><ellipse cx="359.5" cy="433" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M362.4688,438.6406 Q361.8906,438.9375 361.25,439.0859 Q360.6094,439.2344 359.9063,439.2344 Q357.4063,439.2344 356.0859,437.5859 Q354.7656,435.9375 354.7656,432.8125 Q354.7656,429.6875 356.0859,428.0313 Q357.4063,426.375 359.9063,426.375 Q360.6094,426.375 361.2578,426.5313 Q361.9063,426.6875 362.4688,426.9844 L362.4688,429.7031 Q361.8438,429.125 361.25,428.8516 Q360.6563,428.5781 360.0313,428.5781 Q358.6875,428.5781 358,429.6484 Q357.3125,430.7188 357.3125,432.8125 Q357.3125,434.9063 358,435.9766 Q358.6875,437.0469 360.0313,437.0469 Q360.6563,437.0469 361.25,436.7734 Q361.8438,436.5 362.4688,435.9219 L362.4688,438.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="72" x="373.5" y="437.1543">chessgame</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="447.5" y1="449" y2="449"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="345.5" x2="447.5" y1="457" y2="457"/><ellipse cx="355.5" cy="468" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="364.5" y="471.2104">chessgame()</text><!--MD5=[66c0794391cc42aa972bc0c71ef3e398]
reverse link point to piece--><path d="M582.5,217.36 C582.5,269.82 582.5,336.82 582.5,384.8 " fill="none" id="point&lt;-piece" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="575.5,217.32,582.5,197.32,589.5,217.32,575.5,217.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[e9bff1b9d3ced6012321f4d2521d383a]
reverse link response to put--><path d="M1189.91,183.2 C1138.26,220.05 1065.62,272.74 1003.5,321 C962.42,352.91 916.54,391.17 886.04,416.99 " fill="none" id="response&lt;-put" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1185.89,177.47,1206.24,171.58,1194,188.88,1185.89,177.47" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[5b49269be4a4d6871bcf361170328fb6]
reverse link response to withdraw--><path d="M1239.35,190.84 C1217.68,256.92 1182.22,365.03 1165.21,416.9 " fill="none" id="response&lt;-withdraw" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1232.72,188.61,1245.6,171.78,1246.02,192.97,1232.72,188.61" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0bf6ffb4328f5035750bc83844ce9a2e]
reverse link response to giveup--><path d="M1292.06,188.71 C1334.85,254.59 1406.22,364.47 1440.28,416.9 " fill="none" id="response&lt;-giveup" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1286.09,192.37,1281.07,171.78,1297.83,184.74,1286.09,192.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[7064ed608726e45f8a21bb44379bdc75]
reverse link response to prohibit--><path d="M1355.85,180.23 C1428.66,214.94 1529.1,266.25 1611.5,321 C1655.54,350.26 1701.78,389.91 1731.53,416.76 " fill="none" id="response&lt;-prohibit" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1352.59,186.42,1337.5,171.55,1358.57,173.77,1352.59,186.42" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[997e32555eb5ad14d35b1d09b761977f]
reverse link myplayer to player--><path d="M1846.37,235.3 C1917.34,292.48 2002.67,361.23 2056.26,404.41 " fill="none" id="myplayer&lt;-player" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1841.72,240.54,1830.54,222.54,1850.5,229.64,1841.72,240.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d14ae9c00fdf16069bd3189082f51052]
reverse link yourplayer to player--><path d="M2108.5,198.08 C2108.5,259.4 2108.5,351.18 2108.5,404.33 " fill="none" id="yourplayer&lt;-player" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2101.5,197.77,2108.5,177.77,2115.5,197.77,2101.5,197.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[d33ef76ab7cc3b11f40e06d20f9a9f2a]
reverse link judge to myjudge--><path d="M2423.5,198.26 C2423.5,233.42 2423.5,278.55 2423.5,320.66 " fill="none" id="judge&lt;-myjudge" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="2416.5,197.77,2423.5,177.77,2430.5,197.77,2416.5,197.77" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[50185b45c1e4528dd42b6ef140d3ed62]
link chessboard to chessstack--><!--MD5=[8181cb0ffcc3ee2b19e0b333da3ccf07]
link chessboard to handle--><!--MD5=[75eac303cbe8bda0fd35886bcde70683]
link handle to chessgame--><!--MD5=[46ab649eed2a14c137abff09410c7bf9]
@startuml
class point{
	+ point(int,int)
	+ ~point()
	+ int getx(void)
	+ int gety(void)
	- int m_x
	- int m_y
}

class piece{
	+ enum color{black=1,white=2}
	+ piece(int,int,color)
	+ piece(point*,color)
	+ ~piece()
	+ color getc(void)
	- m_c
}
point<|- - piece

class chessboard{
	+ enum size{LEN=15,MAXNUM=225}
	+ enum state{empty=0,black=1,white=2}
	+ chessboard()
	+ ~chessboard()
	+ bool istaken(int,int)
	+ bool isempty()
	+ bool isfull()
	+ bool isbound(int,int)
	+ int getn()
	+ state gets(int,int)
	+ bool sets(int,int,state)
	+ void show(point*)
	- int num
	- state array[LEN][LEN]
	- void line_draw(int,int)
	- void chess_draw(int,int,state,point*)
}

class chessstack{
	+ chessstack()
	+ ~chessstack()
	+ piece* get_last_piece(void)
	+ bool pop(void)
	+ bool push(piece*)
	+ bool isempty()
	+ int getn(void)
	+ void replay()
	- int num
	- std::stack<piece*> s;
}

abstract class response{
	+ enum type{put,withdraw,giveup,prohibit}
	+ virtual response::type get_response_type()=0
}
class put{
	+ virtual response::type get_response_type()
}
class withdraw{
	+ virtual response::type get_response_type()
}
class giveup{
	+ virtual response::type get_response_type()
}
class prohibit{
	+ virtual response::type get_response_type()
}
response<|- - put
response<|- - withdraw
response<|- - giveup
response<|- - prohibit

class handle{
	+ enum type{none,l3,l4,l5,ll}
	+ handle()
	+ ~handle()
	+ handle::type get_type(chessboard*,point*,int,int)
	+ bool check_prohibit(chessboard*,point*)
	+ bool isfive(chessboard*,point*)
	- const int vec[4][2]
	- int single_find_same(chessboard*,piece*,int,int)
	- int double_find_same(chessboard*,piece*,int,int)
	- int distance_xboarder(int)
	- int distance_yboarder(int)
}

abstract class player{
	+ virtual response* send_response(chessboard*,point*)=0
	+ virtual point* send_point(chessboard*,point*)=0
	+ virtual bool allow_withdraw(chessboard*,point*)=0
}
class myplayer{
	+ myplayer()
	+ virtual response* send_response(chessboard*,point*)
	+ virtual point* send_point(chessboard*,point*)
	+ virtual bool allow_withdraw(chessboard*,point*)
	- const long scoretable[11]
	- const int vec[4][2]
	- long get_score(int,int)
	- long mark_vec(chessboard*,int,int,chessboard::state,int,int)
	- long mark(chessboard*,int,int,chessboard::state)
	- handle hd
}
class yourplayer{
	+ virtual response* send_response(chessboard*,point*)
	+ virtual point* send_point(chessboard*,point*)
	+ virtual bool allow_withdraw(chessboard*,point*)
}
myplayer<|- - player
yourplayer<|- - player

abstract class judge{
	+ virtual bool iswin(void)=0
	+ virtual void inter(player*,player*)=0
	+ virtual void end(void)=0
}
class myjudge{
	+ myjudge()
	+ ~myjudge()
	+ virtual bool iswin(void)
	+ virtual void inter(player*,player*)
	+ virtual void end(void)
	- bool win
	- bool white
	- chessboard jcb
	- chessstack jcs
	- handle hd
	- bool isequal(bool,piece::color)
	- bool judge_win(void)
	- bool deal_put(player*)
	- bool deal_withdraw(player*)
	- bool record_chess(void)
	- bool show_record(void)
}
judge<|- - myjudge

class chessgame{
	+ chessgame()
}
@enduml

PlantUML version 1.2019.12(Sun Nov 03 18:24:54 CST 2019)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 1.8.0_232-b09
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>